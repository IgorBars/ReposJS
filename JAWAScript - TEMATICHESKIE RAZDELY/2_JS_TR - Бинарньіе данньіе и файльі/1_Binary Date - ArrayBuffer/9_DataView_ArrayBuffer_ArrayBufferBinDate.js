/* JawaScript - 9_DataView_ArrayBuffer_ArrayBufferBinDate               DataView(ArrayBuffer)

DataView – это специальное супергибкое НЕтипизированное(!!!) представление данных из ArrayBuffer. 
Оно позволяет обращаться к данным на любой позиции и в любом формате.

  В случае типизированных массивов конструктор строго задаёт формат данных. Весь массив состоит из однотипных значений. 
    Доступ к i-ому элементу можно получить как arr[i].

  В случае DataView доступ к данным осуществляется посредством методов типа .getUint8(i) или .getUint16(i). 
    Мы выбираем формат данных в момент обращения к ним, а не в момент их создания.

Синтаксис:
  new DataView(buffer, [byteOffset], [byteLength])

  - buffer – ссылка на бинарные данные ArrayBuffer. В отличие от типизированных массивов, DataView не создаёт буфер автоматически. 
    Нам нужно заранее подготовить его самим.
  - byteOffset – начальная позиция данных для представления (по умолчанию 0).
  - byteLength – длина данных (в байтах), используемых в представлении (по умолчанию – до конца buffer).
*/

'use strict';
alert("Start 9_DataView_ArrayBuffer_ArrayBufferBinDate");


// бинарный массив из 4х байт, каждый имеет максимальное значение 255
let buffer = new Uint8Array([255, 255, 255, 255]).buffer;

let dataView = new DataView(buffer);

// получим 8-битное число на позиции 0
alert( dataView.getUint8(0) ); // 255

// а сейчас мы получим 16-битное число на той же позиции 0, оно состоит из 2-х байт, вместе составляющих число 65535
alert( dataView.getUint16(0) ); // 65535 (максимальное 16-битное беззнаковое целое)

// получим 32-битное число на позиции 0
alert( dataView.getUint32(0) ); // 4294967295 (максимальное 32-битное беззнаковое целое)

dataView.setUint32(0, 0); // при установке 4-байтового числа в 0, во все его 4 байта будут записаны нули


alert("End");