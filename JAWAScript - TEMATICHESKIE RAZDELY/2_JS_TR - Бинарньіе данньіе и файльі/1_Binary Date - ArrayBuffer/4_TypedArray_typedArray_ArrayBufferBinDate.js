/* JawaScript - 4_TypedArray_typedArray_ArrayBufferBinDate               TypedArray(typedArray)

TypedArray (типизированный бинарньій массив) - Общий термин для всех представлений Uint8Array, Uint32Array и т.д.

Они уже намного больше напоминают обычные массивы: элементы проиндексированы, и возможно осуществить обход содержимого.

Конструкторы типизированных массивов (будь то Int8Array или Float64Array, без разницы) ведут себя по-разному в зависимости от типа передаваемого им аргумента.

Есть 5 вариантов создания типизированных (бинарньіх) массивов:
  new TypedArray(buffer, [byteOffset], [length]);
  new TypedArray(object);
  new TypedArray(typedArray);
  new TypedArray(length);
  new TypedArray();

1. Если передан аргумент типа ArrayBuffer, то создаётся объект-представление для него. Мы уже использовали этот синтаксис ранее.
    Дополнительно можно указать аргументы byteOffset (0 по умолчанию) и length (до конца буфера по умолчанию), тогда представление будет покрывать только часть данных в buffer.

2. Если в качестве аргумента передан Array или какой-нибудь псевдомассив, то будет создан типизированный массив такой же длины и с тем же содержимым.
    Мы можем использовать эту возможность, чтобы заполнить типизированный массив начальными данными.

3. Если в конструктор передан другой объект типа TypedArray, то делается то же самое: создаётся типизированный массив с такой же длиной и в него копируется содержимое. 
    При необходимости значения будут приведены к новому типу.
*/

'use strict';
alert("Start 4_TypedArray_typedArray_ArrayBufferBinDate");


let arr16 = new Uint16Array([255, 1000]);
let arr8 = new Uint8Array(arr16);
alert( arr8[0] ); // 255  - макс зн 8-битового числа
alert( arr8[1] ); // 232, потому что 1000 не помещается в 8 бит (разъяснения будут ниже)


alert("End");

