/* JawaScript - 1_TextDecoder_TextDecoderTextEncoder               TextDecoder
                БИНАРНЬІЕ ДАННЬІЕ И СТРОКОВЬІЙ ТИП ДАННЬІХ
Встроенный объект TextDecoder позволяет декодировать данные из бинарного буфера в обычную строку.
Для этого прежде всего нам нужно создать сам декодер:

let decoder = new TextDecoder([label], [options]);

    - label – тип кодировки, utf-8 используется по умолчанию, но также поддерживаются big5, windows-1251 и многие другие.

    - options – объект с дополнительными настройками:
        - fatal – boolean, если значение true, тогда генерируется ошибка для невалидных (не декодируемых) символов, в ином случае (по умолчанию) они заменяются символом \uFFFD.
        - ignoreBOM – boolean, если значение true, тогда игнорируется BOM (дополнительный признак, определяющий порядок следования байтов), что необходимо крайне редко.

…и после использовать его метод decode:

let str = decoder.decode([input], [options]);

    - input – бинарный буфер (BufferSource) для декодирования.

    - options – объект с дополнительными настройками:
        - stream – true для декодирования потока данных, при этом decoder вызывается вновь и вновь для каждого следующего фрагмента 
          данных. В этом случае многобайтовый символ может иногда быть разделён и попасть в разные фрагменты данных. 
          Это опция указывает TextDecoder запомнить символ, на котором остановился процесс, и декодировать его со следующим фрагментом.
*/

'use strict';
alert("Start 1_TextDecoder_TextDecoderTextEncoder");


let uint8Array = new Uint8Array([72, 101, 108, 108, 111]);
alert( new TextDecoder().decode(uint8Array) );            // Hello

// Мы можем декодировать часть бинарного массива, создав подмассив:
uint8Array = new Uint8Array([0, 72, 101, 108, 108, 111, 0]);

// Возьмём строку из середины массива
// Также обратите внимание, что это создаёт только новое представление без копирования самого массива.
// Изменения в содержимом созданного подмассива повлияют на исходный массив и наоборот.
let binaryString = uint8Array.subarray(1, -1);
alert( new TextDecoder().decode(binaryString) );        // Hello
alert( new TextDecoder().decode(uint8Array) );          // Hello

// возьмем бинарное представление "Если я не ошибаюсь," из следующего урока и декодируем его в текст
uint8Array = new Uint8Array([208,149,209,129,208,187,208,184,32,209,143,32,208,189,208,181,32,208,190,209,136,208,184,208,177,208,176,209,142,209,129,209,140,44]);
alert( new TextDecoder().decode(uint8Array) );          // Если я не ошибаюсь,


alert("End");