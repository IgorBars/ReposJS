/* JawaScript - Типы данных -Number -способы записи */
'use strict';

alert("Start Number_Data");


let num = Number("123"); // превращает строку в число
alert(num);             //  123

//base=16 — для шестнадцатеричного представления цвета, кодировки символов 
//и т.д., цифры могут быть 0..9 или A..F.

//base=2 — обычно используется для отладки побитовых операций, 
//цифры 0 или 1.

//base=36 — максимальное основание, цифры могут быть 0..9 или A..Z

num = 240;
alert("num.toString(16) : " + num.toString(16) ); //f0 -в 16-ичной с-ме сч
alert("num.toString(2) : " + num.toString(2) ); // 11110000 -в 2-ичной

//Если нам надо вызвать метод непосредственно на числе, как toString,
// то нам надо поставить две точки .. после числа.
//синтаксис JavaScript предполагает, что после первой точки начинается десятичная часть. 
alert("123456..toString(36) : " + 123456..toString(36) );  // 2n9c
alert("240..toString(16) : " + 240..toString(16) ); //f0

// Еще вариант записи (123456).toString(36)
alert("(240).toString(16) : " + (240).toString(16) ); //f0
alert("1234.56.toFixed(1) : " + 1234.56.toFixed(1) );// "1234.6" -округление
//.toFixed() - возвращает строковое значение ""

// Внутри JavaScript число представлено в виде 64-битного формата IEEE-754.
// Число хранится в памяти в бинарной форме. Дроби, такие как 0.1, 0.2, которые выглядят 
//довольно просто в десятичной системе счисления, на самом деле являются 
//бесконечной дробью в двоичной форме.
// Неточность при исп. десятичной точки в десятичной с-ме счисления:
alert(`0.1 + 0.2 ${0.1 + 0.2}`); // 0.30000000000000004
//наиболее надёжный способ — это округлить результат исп. метод toFixed(n):
let sum = 0.1 + 0.2;
alert( "sum.toFixed(2): " + sum.toFixed(2) ); // "0.30"
//метод toFixed всегда возвращает строку!

// неявное преобразование строки в число унарным оператором +:
let num1 = +prompt("Enter a number", '');

// вернёт true всегда, кроме ситуаций, когда аргумент - Infinity/-Infinity, не число, не Esc и не пустой ввод ""
alert("isFinite(num) : " + isFinite(num1) );


alert("End");
