/* JawaScript - 2_macro_setTimeout_microMacroTaskRaznoe               

Давайте разобьём задачу (макрозадачу) на части (несколько макрозадач), воспользовавшись вложенным setTimeout:

В работе Script (макрозадача, пока очередь макрозадач пуста) с планировщиком setTimeout (ставит переданньій ему колбек в очередь макрозадач). 

Теперь интерфейс браузера полностью работоспособен во время выполнения «счёта».

Один вызов count делает часть работы (*), а затем, если необходимо, планирует свой очередной запуск (**):

  - Первое выполнение производит счёт: i=1…1000000.
  - Второе выполнение производит счёт: i=1000001…2000000.
  - …и так далее.

При истечении таймера, установленного планировщиком setTimeout, переданньій ему колбек ставится в очередь макрозадач
(т.е. сначала вьіполнятся микрозадачи после текущей макрозадачи, потом очередньіе макрозадачи со своими последующими микрозадачами,
  и только потом - установленньій в очередь макрозадач колбек)
*/

'use strict';
alert("Start 2_macro_setTimeout_microMacroTaskRaznoe");


let i = 0;

let start = Date.now();

function count() {

  // делаем часть тяжёлой работы (*)
  do {                                                            // пока вьіполняется основная часть макрозадачи, поступающие макрозадачи
    i++;                                                          // (напр собьітия мьіши) становятся вочередь макрозадач
  } while (i % 1e6 != 0);

  if (i == 1e9) {
    alert("Done in " + (Date.now() - start) + 'ms');
  } else {
    setTimeout(count); // планируем новый вызов (**)              // постановка колбека в новую очередь макрозадач (N1, если не бьіло собьітий)
  }

}

count();



alert("End");
/* рендеринг
    Теперь если новая сторонняя задача (например, событие onclick) появляется, пока движок занят выполнением 1-й части, 
то она становится в очередь, и затем выполняется, когда 1-я часть завершена комплектно (вместе с последующими 
микрозадачами и рендерингом), перед следующей частью, запланированной setTimeout (если не бьіло более сторонних задач, 
иначе віполняются они согласно очереди макрозадач, и лишь за ними - следующая часть).

    Периодические возвраты в событийный цикл между запусками count дают движку достаточно «воздуха», 
чтобы сделать что-то ещё, отреагировать на действия пользователя и отрисовать изменения на странице.


*/