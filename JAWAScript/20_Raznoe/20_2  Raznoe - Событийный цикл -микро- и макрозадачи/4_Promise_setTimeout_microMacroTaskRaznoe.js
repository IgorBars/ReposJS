/* JawaScript - 4_Promise_setTimeout_microMacroTaskRaznoe               Макрозадачи и Микрозадачи

МИКРОЗАДАЧИ ("отложенньій в конец асинхронньій код" (НЕ ЗАПЛАНИРОВАННЬІЙ setTimeout!!!)) приходят только из кода. 
Обычно они создаются ПРОМИСАМИ: выполнение обработчика .then/catch/finally становится микрозадачей. 
Микрозадачи также используются «под капотом» await, т.к. это форма обработки промиса.

Если мы хотим запустить функцию асинхронно (после текущего кода), но ДО отображения изменений и до новых событий, 
то можем запланировать это через queueMicrotask.
Специальная функция queueMicrotask(func), помещает func в очередь микрозадач [похоже на атрибут defer для скрипта].

СРАЗУ ПОСЛЕ каждой МАКРОЗАДАЧИ (синхронного кода) движок исполняет все задачи из очереди МИКРОЗАДАЧ ПЕРЕД ТЕМ, 
как отобразить изменения на странице а затем выполнить СЛЕДУЮЩУЮ МАКРОЗАДАЧУ, или сделать что-то ещё.
*/

'use strict';
alert("Start 4_Promise_setTimeout_microMacroTaskRaznoe");



setTimeout(() => alert("timeout"));   // (***) макрозадача setTimeout-а ставится в очередь МАКРОЗАДАЧ (N1)

Promise.resolve()
  .then(() => alert("promise"));      // (**) микрозадача Promise-а ставится в очередь МИКРОЗАДАЧ (N1)

alert("code");                        // (*)



alert("End");
/* 
  (*)  code появляется первым, т.к. это обычный синхронный вызов (текущее віполнение макрозадачи).
  (**)  promise появляется вторым, потому что .then проходит через очередь микрозадач и выполняется после текущего синхронного кода.
  (***)  timeout появляется последним, потому что это макрозадача.

Все МИКРОЗАДАЧИ (из очереди микрозадач) завершаются ДО РЕНДЕРИНГА, тем более ДО перехода к другой макрозадаче (обработке каких-либо событий).
Это важно, так как гарантирует, что общее окружение остаётся одним и тем же между микрозадачами – не изменены координаты мыши, 
не получены новые данные по сети и т.п.

Следующим к вьіполнению в собьітийном цикле после микрозадач является РЕНДЕРИНГ (браузер отрисовывает содержимое страницы)

Следующим к вьіполнению в собьітийном цикле после РЕНДЕРИНГА является очередная МАКРОЗАДАЧА (из очереди макрозадач)
*/