/* JawaScript - 8_inputEvent_async_EventsGenerationEvents               

Вложенные события обрабатываются синхронно (вне очереди)
Обычно события обрабатываются асинхронно (ставятся в очередь). То есть, если браузер обрабатывает onclick и в процессе этого произойдёт новое событие, 
то оно ждёт, пока закончится обработка onclick.

Исключением является ситуация, когда событие инициировано из обработчика другого события.

Тогда управление сначала переходит в обработчик вложенного события и уже после этого возвращается назад.

В примере ниже событие menu-open обрабатывается синхронно (вне очереди) во время обработки onclick.

Если нам это не подходит, то мы можем либо поместить dispatchEvent (или любой другой код, инициирующий события) в конец обработчика onclick, 
либо, если это неудобно, можно обернуть генерацию события в setTimeout с нулевой задержкой:
*/

'use strict';
alert("Start 8_inputEvent_async_EventsGenerationEvents");


menu.onclick = function() {                                                     // обработчик собьітия "onclick"
    alert(1);

    // "вложенное событие"  (событие "menu-open" вложено в событие "onclick")
    setTimeout(() => menu.dispatchEvent(new CustomEvent("menu-open", {
        bubbles: true
    }))
    );

    alert(2);
};

document.addEventListener('menu-open', () => alert('вложенное событие'))        // обработчик собьітия "menu-open"


// Порядок вывода: 1 → 2 → вложенное событие.

alert("End");