/* JawaScript - _2get_РазноеProxy

Есть штатньіе ловушки, то есть имена методов низкого уровня, которые мы можем добавить в параметр handler при создании 
new Proxy, чтобы перехватывать нужную операцию.



обернём обычный массив в прокси, который перехватывает операцию чтения
свойства из массива и возвращает 0, если такого элемента нет:

 Используем ловушку-перехватчик об'ьекта Proxy - метод get(target, prop) {}.
 
    Метод get позволяет остановить вьіполнение в момент сразу после обращения к об'ьекту. 
    Єто позволяет вьіполнить несколько желаемьіх промежуточньіх методов.

 Для завершения операции обращения к об'ьекту необходимо вернуть RETURN.

 Return-ом возвращаем: 
    -либо конструкцию вида     return target[prop]; (+ инвариант, где нужно)
    -либо об'ьект Reflect вида    return Reflect.get(target, prop, receiver)

С пом  return Reflect.get  возвращаем в код свойство target.prop
С пом  return Reflect.іet  возвращаем в код true при удачной операции записи
*/
'use strict';
alert("Start _2get_РазноеProxy");

let numbers = [0, 1, 5];

numbers = new Proxy(numbers, {  // прокси перезаписывает переменную (тепер наш об'єкт у обгортці)
  get(target, prop) { // (об'єкт, свойство =индекс)
    if (prop in target) {
      return target[prop];
    } else {
      return 0;      // значение по умолчанию
    }
  }
});

alert("[1]: " + numbers[1] );      // 1
alert("[2]: " + numbers[2] );      // 5
alert("[123]: " + numbers[123] );  // 0 (нет такого элемента)


alert("End");

