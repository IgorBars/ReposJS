/* JawaScript - _1wrapper_DecorFUNCAdv  ДЕКОРАТОР.

Вместо того, чтобы усложнять slow(x) дополнительной функциональностью, мы заключим её в функцию-обёртку – «wrapper» 
(от англ. «wrap» – обёртывать), которая добавит кеширование.
 */
'use strict';

alert("Start _1wrapper_DecorFUNCAdv");

function slow(x) {
    // здесь могут быть ресурсоёмкие вычисления
    let res = x * x;

    alert(`Сalled with ${x}`);

    return res;
}
  
function cachingDecorator(func) {
    let cache = new Map();

    return function(x) {/*ОБЕРТКА  -  функция с набором новых желаемых действий по кэшированию,
                                        возвращаемая в переменную, чтобы ее оттуда вызывать -()     */ 
    if (cache.has(x)) {    // если кеш содержит такой ключ x,

        return "із кешу " + cache.get(x); // читаем из него результат     (return прерьівает продолжение вьіполнения блока if)
    }

    let result = func(x); // если в кеше нет такого ключа x, вызываем функцию из аргумента cachingDecorator

    cache.set(x, result); // и кешируем (запоминаем) результат

    return "вперше " + result;
    };
}
  
slow = cachingDecorator(slow);// повертаємо декоратор у "саму функцію" (змінну з кодом функції)
//помещаем исходную ф-ю slow в cachingDecorator, и возвращаем в переменную slow набор новых желаемых действий по кэшированию

alert( "Сначала кэшируем результат: " + slow(1) );            // Called with 1     Сначала кэшируем результат: 1
alert( "При повт запросе - результат из кэша: " + slow(1) );  // При повт запросе - результат из кэша: 1

alert( "Сначала кэшируем результат: " + slow(2) );            // Called with 2     Сначала кэшируем результат: 4
alert( "При повт запросе - результат из кэша: " + slow(2) );  // При повт запросе - результат из кэша: 4



alert("End");